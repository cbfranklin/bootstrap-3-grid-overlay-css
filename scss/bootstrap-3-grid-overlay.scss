$rowColor1: #d28720;
$rowColor2: #ffa120;
$rowColor3: #fcba5f;
$rowColor4: #fed49a;

$colCenteredColor: #4ccecf;

$colPadding : 10px;
$numOfCols : 12;

$colWidth : (100 / $numOfCols);

@mixin gridOverlay($gridColor){
  // awesome scss loopage for gradient stops
  // (@jackiebackwards https://codepen.io/jackiebackwards/pen/Fzkvg)
  $first-stops: transparent #{$colPadding},
                $gridColor #{$colPadding};

  $last-stops: $gridColor calc(100% - #{$colPadding}),
               transparent calc(100% - #{$colPadding});


  @for $i from 1 through ($numOfCols - 1) {
    $new-stops: $gridColor calc(#{$i*$colWidth}% - #{$colPadding}),
                transparent calc(#{$i*$colWidth}% - #{$colPadding}),
                transparent calc(#{$i*$colWidth}% + #{$colPadding}),
                $gridColor calc(#{$i*$colWidth}% + #{$colPadding});

    $first-stops: join($first-stops, $new-stops, comma);
  }

  $stops: join($first-stops, $last-stops, comma);

  background: linear-gradient(90deg, $stops), no-repeat;
}

// currently supporting 3 nested grids
.row{
  @include gridOverlay($rowColor1);
}
.row .row{
  @include gridOverlay($rowColor2);
}
.row .row .row{
  @include gridOverlay($rowColor3);
}
.row .row .row .row{
  @include gridOverlay($rowColor4);
}

.col-centered-1,
.col-centered-2,
.col-centered-3,
.col-centered-4,
.col-centered-5,
.col-centered-6,
.col-centered-7,
.col-centered-8,
.col-centered-9,
.col-centered-10,
.col-centered-11,
.col-centered-12{
  @include gridOverlay($colCenteredColor);
}

.row,
.col-centered-1,
.col-centered-2,
.col-centered-3,
.col-centered-4,
.col-centered-5,
.col-centered-6,
.col-centered-7,
.col-centered-8,
.col-centered-9,
.col-centered-10,
.col-centered-11,
.col-centered-12{
  &::after{
    content: attr(class);
  }
}
